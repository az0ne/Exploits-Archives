=================================================
Vulnerability ID: HTB22464
Reference: http://www.htbridge.ch/advisory/xss_vulnerability_in_cmsqlite.html
Product: CMSQLite
Vendor: CMSQLite-Team
Vulnerable Version: 1.3 and Probably Prior Versions
Vendor Notification: 29 June 2010 
Vulnerability Type: XSS (Cross Site Scripting)
Status: Not Fixed, Vendor Alerted, Awaiting Vendor Response
Risk level: Medium 
Credit: High-Tech Bridge SA - Ethical Hacking & Penetration Testing (http://www.htbridge.ch/) 

Vulnerability Details:
User can execute arbitrary JavaScript code within the vulnerable application.

The vulnerability exists due to failure in the "/admin/editMenu.php" script to properly sanitize user-supplied input in "langId" variable. Successful exploitation of this vulnerability could result in a compromise of the application, theft of cookie-based authentication credentials, disclosure or modification of sensitive data.

An attacker can use browser to exploit this vulnerability. The following PoC is available:
http://host/admin/editMenu.php?id=1&langId=en'"><script>alert(document.cookie)</script>

=================================================
Vulnerability ID: HTB22463
Reference: http://www.htbridge.ch/advisory/sql_injection_vulnerability_in_cmsqlite_2.html
Product: CMSQLite
Vendor: CMSQLite-Team
Vulnerable Version: 1.3 and Probably Prior Versions
Vendor Notification: 29 June 2010 
Vulnerability Type: SQL Injection
Status: Not Fixed, Vendor Alerted, Awaiting Vendor Response
Risk level: Low 
Credit: High-Tech Bridge SA - Ethical Hacking & Penetration Testing (http://www.htbridge.ch/) 

Vulnerability Details:
The vulnerability exists due to failure in the "/admin/helper/createNewCategory.php" script to properly sanitize user-supplied input in "catName" or "catDesc" variables. Attacker can alter queries to the application SQL database, execute arbitrary queries to the database, compromise the application, access or modify sensitive data, or exploit various vulnerabilities in the underlying SQL database.

Attacker can use browser to exploit this vulnerability. The following PoC is available:

<form action="http://host/admin/helper/createNewCategory.php"  method="post"  name="main" >
<input type="hidden" name="catName" value="catName'some sql" />
<input type="hidden" name="catDesc" value="catDesc'some sql" />
</form>
<script>
document.main.submit();
</script>


=================================================
Vulnerability ID: HTB22462
Reference: http://www.htbridge.ch/advisory/sql_injection_vulnerability_in_cmsqlite_1.html
Product: CMSQLite
Vendor: CMSQLite-Team
Vulnerable Version: 1.3 and Probably Prior Versions
Vendor Notification: 29 June 2010 
Vulnerability Type: SQL Injection
Status: Not Fixed, Vendor Alerted, Awaiting Vendor Response
Risk level: Low 
Credit: High-Tech Bridge SA - Ethical Hacking & Penetration Testing (http://www.htbridge.ch/) 

Vulnerability Details:
The vulnerability exists due to failure in the "/admin/helper/deleteArticle.php" script to properly sanitize user-supplied input in "id" variable. Attacker can alter queries to the application SQL database, execute arbitrary queries to the database, compromise the application, access or modify sensitive data, or exploit various vulnerabilities in the underlying SQL database.

Attacker can use browser to exploit this vulnerability. The following PoC is available:

<form action="http://host/admin/helper/deleteArticle.php" method="post" name="main" >
	<input type="hidden" name="id" value="1'some sql" />
</form>
<script>
document.main.submit();
</script>



=================================================
Vulnerability ID: HTB22461
Reference: http://www.htbridge.ch/advisory/sql_injection_vulnerability_in_cmsqlite.html
Product: CMSQLite
Vendor: CMSQLite-Team
Vulnerable Version: 1.3 and Probably Prior Versions
Vendor Notification: 29 June 2010 
Vulnerability Type: SQL Injection
Status: Not Fixed, Vendor Alerted, Awaiting Vendor Response
Risk level: Low 
Credit: High-Tech Bridge SA - Ethical Hacking & Penetration Testing (http://www.htbridge.ch/) 

Vulnerability Details:
The vulnerability exists due to failure in the "/admin/editArticle.php" script to properly sanitize user-supplied input in "id" variable. Attacker can alter queries to the application SQL database, execute arbitrary queries to the database, compromise the application, access or modify sensitive data, or exploit various vulnerabilities in the underlying SQL database.

Attacker can use browser to exploit this vulnerability. The following PoC is available:
http://host/admin/editArticle.php?id=1'+sql_code_here

