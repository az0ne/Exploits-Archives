				<TD colspan="2" align="left" bgColor="navy">&nbsp;<FONT color=white><B style="FONT-SIZE: 12pt">Summary</B></FONT></TD>
			</TR>
			<TR>
				<TD colspan="2" style="FONT-SIZE: 11pt">As advised in the installation text that comes with all versions of PHP, when installing PHP.EXE for use on a windows machine installed with Apache, the user should insert a few lines of code into the Apache "httpd.conf". These exact lines are shown here:<br>

&nbsp;&nbsp;&nbsp;ScriptAlias /php/ "c:/php/"<br>
&nbsp;&nbsp;&nbsp;AddType application/x-httpd-php .php<br>
&nbsp;&nbsp;&nbsp;Action application/x-httpd-php "/php/php.exe"<br>

A security vulnerability arises when placing the ScriptAlias line above. This line effectively maps the alias /php/ to your web document root such that typing "http://www.example.com/php/" will actually try to access in this case "c:\php\". Please note that the last "/" on the end of the URL has to exist for this to work ("http://www.example.com/php" will not work). At this point your server will respond with "Access Denied", however if you now specify the URL "http://www.example.com/php/php.exe" , you will see the error "No input file specified". This error is actually returned by php.exe, which you have just executed on the server.<br>

There are many exploits that can happen with this setup (some very serious, which could be used to gain root access).<br>
<br></TD>
			</TR>
			<TR>
				<TD colspan="2" align="left" bgColor="navy">&nbsp;<FONT color="white"><B style="FONT-SIZE: 12pt">Details</B></FONT></TD>
			</TR>
			<TR>
				<TD colspan="2" style="FONT-SIZE: 11pt"><B>Exploit 1:</B> <br>
It is possible to read <b>any</b> file remotely on the server, even across drives with the following URL construct:<br>
<br>
&nbsp;"http://www.example.com/php/php.exe?c:\winnt\repair\sam"<br>
 <br>
PHP.EXE will parse the sam file "c:\winnt\repair\sam" and return it to the browser for download (this is the Windows NT password file).<br>
 <br>
&nbsp;"http://www.example.com/php/php.exe?d:\winnt\repair\sam"<br>
<br>
PHP.EXE will return the same file on the D: drive.<br>
<br>
The above SAM file can then be used to decrypt all the Account Passwords for the Server.<br>
<br>
<B>Exploit 2:</B> <br>
If you specify a file that exists in the php directory (different files exist depending on the version of PHP), the web server will try to execute this file and will throw back an error reporting the install directory of php. So in PHP4, for example, you would specify the following line:<br>
 <br>
&nbsp;"http://www.example.com/php/php4ts.dll"<br>
 <br>
The error returned by the web server would be: " couldn't create child process: 22693: C:/php/php4ts.dll " showing the install path of PHP.<br>
<br></TD>
			</TR>
			<TR>
				<TD colspan="2" align=left bgColor=navy>&nbsp;<FONT color=white><B style="FONT-SIZE: 12pt">Additional information</B></FONT></TD>
			</TR>
			<TR>
				<TD colspan="2" style="FONT-SIZE: 11pt">The information has been provided by <A HREF="mailto:brereton_paul at btopenworld.com">Paul Brereton</A>.
<br></TD>
			</TR>
			</TABLE>
		</td>
	</TR>
	<TR>
		<TD COLSPAN="3">&nbsp;</TD>
	</TR>
	<TR>
		<TD COLSPAN="3" width="1" height="1" bgcolor="orange"><img src="http://www.securiteam.com/space.gif" height=1 border="0" width=1 alt=&"nbsp;"></TD>
	</TR>
	<tr>
		<td COLSPAN="3">
<div align="center">
<font color="gray" style="FONT-SIZE: 8pt">
Copyright © 1998-2001 <a href="http://www.beyondsecurity.com/info.html" style="COLOR: gray; FONT-SIZE: 7pt">Beyond Security
Ltd.</a> All rights reserved.<br>
<a href="http://www.beyondsecurity.com/legal.html" style="COLOR: gray; FONT-SIZE: 7pt">Terms of Use</a> <a href="http://www.beyondsecurity.com/privacy.html" style="COLOR: gray; FONT-SIZE: 7pt">Site Privacy Statement</a>.<br><br>
</font>
</div>
		</td>
	</tr>
</TABLE>
</DIV>
